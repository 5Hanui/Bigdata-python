# 2. 연속 데이터 > 리스트
# list(), []
# 리스트를 구성하는 데이터들의
# 순서가 존재, 중복 ok, 인덱스 존재(0~, ~-1)
a = None  # 값이 없다 (타언어 null, nil)
################################################
# 비어있는 리스트 생성
a = []
print(a, type(a), len(a))
a = list()
print(a, type(a), len(a))
################################################
#샘플값 부여하고 생성
a = [1, 3, 5, 7, 9]
print(a, len(a))
a = ['cat', 'dog', 'bird']
print(a, len(a))
mix = [1, 2, 'cat', [5, 6]]
print(mix, len(mix))
################################################
# 통상적으로는 데이터를 받아왔더니 형식이 리스트였더라
#######################################
# 인덱싱
# a 리스트에서 dog값을 획득하여 출력하시오
print(a[1])
# 'bird' 출력하시오
print(a[-1])
################################################
# 슬라이싱
a = [1, 3, 5, 7, 9]
# a를 통해서 3,5,7을 가진 리스트를 구하시오.
print(a[1:4], a[1:-1], a)
################################################
print(mix)
# mix = [1,2,'cat',[5,6]]
# mix리스트에서 5를 출력하시오
print(mix[-1][0])
##############################################
# 원본 조작
mix[0] = 100
print(mix)
# 슬라이싱 경우 대입 데이터를 분해해서 대입
# 개수는 상관없다.
# 단, 대입하는 데이터는 무조건 연속 데이터이어야만 한다. 시컨스타입이 아닌경우 성립X
#mix[:2] = 10 # 단일 데이터이므로 오류
mix[:2] = 'multi'
print(mix)
# ['m', 'u', 'l', 't', 'i', 'cat', [5, 6]]
###############################################
a = []
b = [1, 2]
# 멤버 추가
print(a)
a.append(100)
print(a)
# 리스트와 리스트 더하기
# 리스트를 이어 붙이는데 사본으로 구하고 싶은 경우
# 원본을 변경하지 않는 경우
print(a+b)
# 리스트에 리스트를 추가
print('0', a)
a.extend(b)
# 리스트를 이어 붙이고 싶은데 원본을 변경하고 싶을 때
print('원본을 변경 extend', a)
a.append(b)
print('2', a)
#################################################
# 리스트 삭제
a = [1, 2, 3, 4]
print(a)
# 0번 인덱스 삭제
del a[0]
print(a)
# 구간 삭제
del a[:2]
print(a)
# 4라는 값을 가진 멤버를 삭제
a.remove(4)
print(a)
a = [1, 2, 3, 4]
# 그냥 다 초기화
print(a)
a.clear()
print(a)
